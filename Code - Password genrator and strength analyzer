import random
import string

# Title
print("== Password Generator and Strength Checker ==")

# Function to create password
def make_password(length):
    all_chars = string.ascii_letters + string.digits + string.punctuation
    password = ''
    for i in range(length):
        password += random.choice(all_chars)
    return password

# Function to check how strong the password is
def check_strength(pw):
    points = 0
    feedback = []

    # Check length
    if len(pw) >= 12:
        points += 1
        feedback.append("✔ Good length (12 or more characters)")
    else:
        feedback.append("✘ Too short (less than 12 characters)")

    # Lowercase
    if any(c.islower() for c in pw):
        points += 1
        feedback.append("✔ Has lowercase letters")
    else:
        feedback.append("✘ Missing lowercase letters")

    # Uppercase
    if any(c.isupper() for c in pw):
        points += 1
        feedback.append("✔ Has uppercase letters")
    else:
        feedback.append("✘ Missing uppercase letters")

    # Digits
    if any(c.isdigit() for c in pw):
        points += 1
        feedback.append("✔ Has numbers")
    else:
        feedback.append("✘ Missing numbers")

    # Symbols
    if any(c in string.punctuation for c in pw):
        points += 1
        feedback.append("✔ Has special characters (!, @, #, etc.)")
    else:
        feedback.append("✘ Missing special characters")

    return points, feedback

# User input
try:
    user_len = int(input("How long should your password be? (e.g. 12): "))
    if user_len < 4:
        print("Password too short! Must be at least 4 characters.")
    else:
        password = make_password(user_len)
        print("\nYour password is:", password)

        score, review = check_strength(password)
        levels = ["Very Weak", "Weak", "Okay", "Good", "Strong", "Excellent"]

        print("\nStrength:", levels[score])
        print("Feedback:")
        for point in review:
            print("-", point)

except:
    print("Invalid input. Please enter a number like 12 or 16.")
